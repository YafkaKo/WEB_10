services:
  api:
    image: dmitrium/lab-10-api:1
    container_name: api
    working_dir: /app
    build:
      context: ./api
    restart: unless-stopped
    environment:
      - APP_PORT=${APP_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGADMIN_USERNAME=${PGADMIN_USERNAME}
      - PGADMIN_PASSWORD=${PGADMIN_PASSWORD}
      - PGADMIN_PORT=${PGADMIN_PORT}
      - AUTH_JWT_SECRET=${AUTH_JWT_SECRET}
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_API_PORT=${MINIO_API_PORT}
      - MINIO_CONSOLE_PORT=${MINIO_CONSOLE_PORT}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - S3_REGION=${S3_REGION}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_MANAGEMENT_PORT=${RABBITMQ_MANAGEMENT_PORT}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - '80:${APP_PORT}'
    depends_on:
      - db
      - redis
      - minio
      - rabbitmq

  greeting_service:
    build:
      context: ./greeting_service
    container_name: greeting_service
    working_dir: /app
    restart: unless-stopped
    environment:
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
    depends_on:
      - rabbitmq

  db:
    command: ['postgres', '-c', 'log_statement=all']
    container_name: db
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST_AUTH_METHOD=trust
    image: postgres:14
    ports:
      - '${POSTGRES_PORT}:5432'
    restart: unless-stopped
    volumes:
      - postgres:/var/lib/postgresql/data

  redis:
    image: redis:latest
    restart: unless-stopped
    container_name: redis
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - '${REDIS_PORT}:${REDIS_PORT}'
    volumes:
      - redis:/var/lib/redis
  
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - '${MINIO_API_PORT}:9000'
      - '${MINIO_CONSOLE_PORT}:9001'
    environment:
      - MINIO_ROOT_USER:${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD:${MINIO_ROOT_PASSWORD}
    command: server /data --address ":${MINIO_API_PORT}" --console-address ":${MINIO_CONSOLE_PORT}"
    restart: unless-stopped
    volumes:
      - minio:/data

  pg_admin:
    container_name: pg_admin
    image: dpage/pgadmin4:8.9
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_USERNAME}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - '${PGADMIN_PORT}:80'
    volumes:
      - pgadmin:/var/lib/pgadmin
    restart: unless-stopped
    depends_on:
      - db

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    ports:
      - '${RABBITMQ_PORT}:${RABBITMQ_PORT}'
      - '${RABBITMQ_MANAGEMENT_PORT}:15672'
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    restart: unless-stopped

volumes:
  postgres:
  redis:
  pgadmin:
  minio:
  rabbitmq-data:

networks:
  minio_network:
    driver: bridge
